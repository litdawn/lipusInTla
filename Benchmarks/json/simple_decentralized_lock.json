{"location":"line 1, col 1 to line 55, col 4 of module simple_decentralized_lock","moduleInfo":{"location":"line 1, col 1 to line 1, col 42 of module simple_decentralized_lock","moduleName":"simple_decentralized_lock"},"extends":{"extendedModuleNames":["TLC"],"location":"line 4, col 1 to line 4, col 11 of module simple_decentralized_lock"},"body":{"declaredParams":[{"location":"line 6, col 1 to line 6, col 13 of module simple_decentralized_lock","paramName":"Node"}],"definedVariables":[{"variableName":"message"},{"variableName":"has_lock"}],"location":"line 6, col 1 to line 53, col 89 of module simple_decentralized_lock","operatorDefinitions":[{"concreteContent":"vars == <<message, has_lock>>","location":"line 11, col 1 to line 11, col 29 of module simple_decentralized_lock","operatorName":"vars","type":"State"},{"concreteContent":"Send(src, dst) ==\n    /\\ src \\in has_lock\n    /\\ message' = message \\cup {<<src, dst>>}\n    /\\ has_lock' = has_lock \\ {src}\n","location":"line 13, col 1 to line 16, col 35 of module simple_decentralized_lock","operatorName":"Send","paramNum":2,"type":"Action"},{"concreteContent":"Recv(src, dst) ==\n    /\\ <<src, dst>> \\in message\n    /\\ message' = message \\ {<<src,dst>>}\n    /\\ has_lock' = has_lock \\cup {dst}\n","location":"line 18, col 1 to line 21, col 38 of module simple_decentralized_lock","operatorName":"Recv","paramNum":2,"type":"Action"},{"concreteContent":"Next ==\n    \\/ \\E src,dst \\in Node : Send(src,dst)\n    \\/ \\E src,dst \\in Node : Recv(src,dst)\n","location":"line 23, col 1 to line 25, col 42 of module simple_decentralized_lock","operatorName":"Next","type":"State"},{"concreteContent":"NextUnchanged == UNCHANGED vars","location":"line 27, col 1 to line 27, col 31 of module simple_decentralized_lock","operatorName":"NextUnchanged","type":"State"},{"concreteContent":"Init ==\n    \\E start \\in Node :\n        /\\ message = {}\n        /\\ has_lock = {start}\n","location":"line 29, col 1 to line 32, col 29 of module simple_decentralized_lock","operatorName":"Init","type":"State"},{"concreteContent":"TypeOK == \n    /\\ message \\in SUBSET (Node \\X Node)\n    /\\ has_lock \\in SUBSET Node\n","location":"line 34, col 1 to line 36, col 31 of module simple_decentralized_lock","operatorName":"TypeOK","type":"State"},{"concreteContent":"Inv == \\A x,y \\in Node : (x \\in has_lock /\\ y \\in has_lock) => (x = y)","location":"line 39, col 1 to line 39, col 70 of module simple_decentralized_lock","operatorName":"Inv","type":"State"},{"concreteContent":"IndHuman == \n    /\\ TypeOK \n    /\\ Inv\n    /\\ \\A n,t \\in Node : <<n,t>> \\in message => has_lock = {}\n    /\\ \\A a,b \\in message : a = b\n","location":"line 42, col 1 to line 46, col 33 of module simple_decentralized_lock","operatorName":"IndHuman","type":"State"},{"concreteContent":"IndHumanB ==\n    /\\ TypeOK \n    /\\ Inv\n    /\\ \\A n,t \\in Node : <<n,t>> \\in message => has_lock = {}\n    /\\ \\A a,b,c,d \\in Node : (<<a,b>> \\in message /\\ <<c,d>> \\in message) => (a=c /\\ b=d)\n","location":"line 49, col 1 to line 53, col 89 of module simple_decentralized_lock","operatorName":"IndHumanB","type":"State"}]}}