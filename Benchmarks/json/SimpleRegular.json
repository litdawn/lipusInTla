{"location":"line 1, col 1 to line 173, col 38 of module SimpleRegular","moduleInfo":{"location":"line 1, col 1 to line 1, col 76 of module SimpleRegular","moduleName":"SimpleRegular"},"extends":{"extendedModuleNames":["Integers"],"location":"line 58, col 1 to line 58, col 16 of module SimpleRegular"},"body":{"declaredParams":[{"location":"line 60, col 1 to line 60, col 10 of module SimpleRegular","paramName":"N"}],"definedVariables":[{"variableName":"VARIABLES"},{"variableName":"x"},{"variableName":"y"},{"variableName":"pc"}],"location":"line 60, col 1 to line 129, col 42 of module SimpleRegular","operatorDefinitions":[{"concreteContent":"vars == << x, y, pc >>","location":"line 75, col 1 to line 75, col 22 of module SimpleRegular","operatorName":"vars","type":"State"},{"concreteContent":"ProcSet == (0..N-1)","location":"line 77, col 1 to line 77, col 19 of module SimpleRegular","operatorName":"ProcSet","type":"State"},{"concreteContent":"Init == (* Global variables *)\n        /\\ x = [i \\in 0..(N-1) |-> {0}]\n        /\\ y = [i \\in 0..(N-1) |-> 0]\n        /\\ pc = [self \\in ProcSet |-> \"a1\"]\n","location":"line 79, col 1 to line 82, col 43 of module SimpleRegular","operatorName":"Init","type":"State"},{"concreteContent":"a1(self) == /\\ pc[self] = \"a1\"\n            /\\ x' = [x EXCEPT ![self] = {0,1}]\n            /\\ pc' = [pc EXCEPT ![self] = \"a2\"]\n            /\\ y' = y\n","location":"line 84, col 1 to line 87, col 21 of module SimpleRegular","operatorName":"a1","paramNum":1,"type":"Action"},{"concreteContent":"a2(self) == /\\ pc[self] = \"a2\"\n            /\\ x' = [x EXCEPT ![self] = {1}]\n            /\\ pc' = [pc EXCEPT ![self] = \"b\"]\n            /\\ y' = y\n","location":"line 89, col 1 to line 92, col 21 of module SimpleRegular","operatorName":"a2","paramNum":1,"type":"Action"},{"concreteContent":"b(self) == /\\ pc[self] = \"b\"\n           /\\ \\E v \\in x[(self-1) % N]:\n                y' = [y EXCEPT ![self] = v]\n           /\\ pc' = [pc EXCEPT ![self] = \"Done\"]\n           /\\ x' = x\n","location":"line 94, col 1 to line 98, col 20 of module SimpleRegular","operatorName":"b","paramNum":1,"type":"Action"},{"concreteContent":"proc(self) == a1(self) \\/ a2(self) \\/ b(self)","location":"line 100, col 1 to line 100, col 45 of module SimpleRegular","operatorName":"proc","paramNum":1,"type":"Action"},{"concreteContent":"Next == \\E self \\in 0..N-1: proc(self)","location":"line 102, col 1 to line 102, col 38 of module SimpleRegular","operatorName":"Next","type":"State"},{"concreteContent":"Spec == Init /\\ [][Next]_vars","location":"line 104, col 1 to line 104, col 29 of module SimpleRegular","operatorName":"Spec","type":"State"},{"concreteContent":"Termination == <>(\\A self \\in ProcSet: pc[self] = \"Done\")","location":"line 106, col 1 to line 106, col 57 of module SimpleRegular","operatorName":"Termination","type":"State"},{"concreteContent":"NextUnchanged == UNCHANGED vars","location":"line 108, col 1 to line 108, col 31 of module SimpleRegular","operatorName":"NextUnchanged","type":"State"},{"concreteContent":"PCorrect == (\\A i \\in 0..(N-1) : pc[i] = \"Done\") => \n                (\\E i \\in 0..(N-1) : y[i] = 1)\n","location":"line 113, col 1 to line 114, col 46 of module SimpleRegular","operatorName":"PCorrect","type":"State"},{"concreteContent":"TypeOK == /\\ x \\in [0..(N-1) -> {{0}, {1}, {0,1}}]\n          /\\ y \\in [0..(N-1) -> {0,1}]\n          /\\ pc \\in [0..(N-1) -> {\"a1\", \"a2\", \"b\", \"Done\"}]\n","location":"line 122, col 1 to line 124, col 59 of module SimpleRegular","operatorName":"TypeOK","type":"State"},{"concreteContent":"Inv ==  /\\ TypeOK\n        /\\ \\A i \\in 0..(N-1) : (pc[i] \\in {\"b\", \"Done\"}) => (x[i] = {1})\n        /\\ \\/ \\E i \\in 0..(N-1) : pc[i] /= \"Done\"\n           \\/ \\E i \\in 0..(N-1) : y[i] = 1\n","location":"line 126, col 1 to line 129, col 42 of module SimpleRegular","operatorName":"Inv","type":"State"}]}}