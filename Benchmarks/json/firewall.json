{"location":"line 1, col 1 to line 51, col 4 of module firewall","moduleInfo":{"location":"line 1, col 1 to line 1, col 25 of module firewall","moduleName":"firewall"},"extends":{"extendedModuleNames":["TLC"],"location":"line 4, col 1 to line 4, col 11 of module firewall"},"body":{"declaredParams":[{"location":"line 6, col 1 to line 6, col 13 of module firewall","paramName":"Node"}],"definedVariables":[{"variableName":"internal"},{"variableName":"sent"},{"variableName":"allowed_in"}],"location":"line 6, col 1 to line 49, col 30 of module firewall","operatorDefinitions":[{"concreteContent":"vars == <<internal,sent,allowed_in>>","location":"line 12, col 1 to line 12, col 36 of module firewall","operatorName":"vars","type":"State"},{"concreteContent":"SendFromInternal(src, dest) == \n    /\\ internal[src]\n    /\\ ~internal[dest]\n    /\\ sent' = [sent EXCEPT ![src] = @ \\cup {dest}]\n    /\\ allowed_in' = allowed_in \\cup {dest}\n    /\\ UNCHANGED internal\n","location":"line 14, col 1 to line 19, col 25 of module firewall","operatorName":"SendFromInternal","paramNum":2,"type":"Action"},{"concreteContent":"SendToInternal(src, dest) == \n    /\\ ~internal[src]\n    /\\ internal[dest]\n    /\\ src \\in allowed_in\n    /\\ sent' = [sent EXCEPT ![src] = @ \\cup {dest}]\n    /\\ UNCHANGED <<internal, allowed_in>>\n","location":"line 21, col 1 to line 26, col 41 of module firewall","operatorName":"SendToInternal","paramNum":2,"type":"Action"},{"concreteContent":"Init == \n    /\\ internal \\in [Node -> BOOLEAN]\n    /\\ sent = [n \\in Node |-> {}]\n    /\\ allowed_in = {}\n","location":"line 28, col 1 to line 31, col 22 of module firewall","operatorName":"Init","type":"State"},{"concreteContent":"Next == \n    \\/ \\E s,t \\in Node : SendFromInternal(s,t)\n    \\/ \\E s,t \\in Node : SendToInternal(s,t)\n","location":"line 33, col 1 to line 35, col 44 of module firewall","operatorName":"Next","type":"State"},{"concreteContent":"Inv == \n    \\A s,d \\in Node:\n        (d \\in sent[s] /\\ internal[d]) => \n        (\\E i \\in Node : internal[i] /\\ s \\in sent[i])\n","location":"line 37, col 1 to line 40, col 54 of module firewall","operatorName":"Inv","type":"State"},{"concreteContent":"NextUnchanged == UNCHANGED vars","location":"line 42, col 1 to line 42, col 31 of module firewall","operatorName":"NextUnchanged","type":"State"},{"concreteContent":"TypeOK ==\n    /\\ internal \\in [Node -> BOOLEAN]\n    /\\ sent \\in [Node -> SUBSET Node]\n    /\\ allowed_in \\in SUBSET Node\n","location":"line 44, col 1 to line 47, col 33 of module firewall","operatorName":"TypeOK","type":"State"},{"concreteContent":"Symmetry == Permutations(Node)","location":"line 49, col 1 to line 49, col 30 of module firewall","operatorName":"Symmetry","type":"State"}]}}