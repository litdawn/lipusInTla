{"location":"line 1, col 1 to line 112, col 4 of module peterson","moduleInfo":{"location":"line 1, col 1 to line 1, col 25 of module peterson","moduleName":"peterson"},"extends":{"extendedModuleNames":["TLC","Naturals","FiniteSets"],"location":"line 2, col 1 to line 2, col 33 of module peterson"},"body":{"declaredParams":[{"location":"line 32, col 1 to line 32, col 16 of module peterson","paramName":"ProcSet"}],"definedVariables":[{"variableName":"flag"},{"variableName":"turn"},{"variableName":"pc"}],"location":"line 24, col 1 to line 111, col 31 of module peterson","operatorDefinitions":[{"concreteContent":"vars == << flag, turn, pc >>","location":"line 29, col 1 to line 29, col 28 of module peterson","operatorName":"vars","type":"State"},{"concreteContent":"Other(p) == CHOOSE q \\in ProcSet : q # p","location":"line 37, col 1 to line 37, col 40 of module peterson","operatorName":"Other","paramNum":1,"type":"Action"},{"concreteContent":"Init == \n    /\\ flag = [i \\in ProcSet |-> FALSE]\n    /\\ turn \\in ProcSet\n    /\\ pc = [self \\in ProcSet |-> \"a1\"]\n","location":"line 39, col 1 to line 42, col 39 of module peterson","operatorName":"Init","type":"State"},{"concreteContent":"a1(self) == /\\ pc[self] = \"a1\"\n            /\\ TRUE\n            /\\ pc' = [pc EXCEPT ![self] = \"a2\"]\n            /\\ UNCHANGED << flag, turn >>\n","location":"line 48, col 1 to line 51, col 41 of module peterson","operatorName":"a1","paramNum":1,"type":"Action"},{"concreteContent":"a2(self) == /\\ pc[self] = \"a2\"\n            /\\ flag' = [flag EXCEPT ![self] = TRUE]\n            /\\ pc' = [pc EXCEPT ![self] = \"a3\"]\n            /\\ turn' = turn\n","location":"line 54, col 1 to line 57, col 27 of module peterson","operatorName":"a2","paramNum":1,"type":"Action"},{"concreteContent":"a3(self, other) == /\\ pc[self] = \"a3\"\n            /\\ self # other\n            /\\ turn' = other\n            /\\ pc' = [pc EXCEPT ![self] = \"a4\"]\n            /\\ flag' = flag\n","location":"line 61, col 1 to line 65, col 27 of module peterson","operatorName":"a3","paramNum":2,"type":"Action"},{"concreteContent":"a4(self, other) == \n    /\\ self # other\n    /\\ pc[self] = \"a4\"\n    /\\ (flag[other] = FALSE) \\/ (turn = self)\n    /\\ pc' = [pc EXCEPT ![self] = \"cs\"]\n    /\\ UNCHANGED << flag, turn >>\n","location":"line 68, col 1 to line 73, col 33 of module peterson","operatorName":"a4","paramNum":2,"type":"Action"},{"concreteContent":"cs(self) == /\\ pc[self] = \"cs\"\n            /\\ TRUE\n            /\\ pc' = [pc EXCEPT ![self] = \"a5\"]\n            /\\ UNCHANGED << flag, turn >>\n","location":"line 76, col 1 to line 79, col 41 of module peterson","operatorName":"cs","paramNum":1,"type":"Action"},{"concreteContent":"a5(self) == /\\ pc[self] = \"a5\"\n            /\\ flag' = [flag EXCEPT ![self] = FALSE]\n            /\\ pc' = [pc EXCEPT ![self] = \"a1\"]\n            /\\ turn' = turn\n","location":"line 82, col 1 to line 85, col 27 of module peterson","operatorName":"a5","paramNum":1,"type":"Action"},{"concreteContent":"Next == \n    \\E self,other \\in ProcSet : \n        \\/ a1(self)\n        \\/ a2(self) \n        \\/ a3(self, other) \n        \\/ a4(self, other) \n        \\/ cs(self) \n        \\/ a5(self)\n","location":"line 87, col 1 to line 94, col 19 of module peterson","operatorName":"Next","type":"State"},{"concreteContent":"Spec == /\\ Init /\\ [][Next]_vars","location":"line 96, col 1 to line 96, col 32 of module peterson","operatorName":"Spec","type":"State"},{"concreteContent":"Mutex == \\A p,q \\in ProcSet : (p # q) => ~(pc[p] = \"cs\" /\\ pc[q] = \"cs\")","location":"line 100, col 1 to line 100, col 72 of module peterson","operatorName":"Mutex","type":"State"},{"concreteContent":"Symmetry == Permutations(ProcSet)","location":"line 102, col 1 to line 102, col 33 of module peterson","operatorName":"Symmetry","type":"State"},{"concreteContent":"TypeOK == \n    /\\ flag \\in [ProcSet -> {TRUE, FALSE}]\n    /\\ turn \\in ProcSet\n    /\\ pc \\in [ProcSet -> {\"a1\",\"a2\",\"a3\",\"a4\",\"a5\",\"cs\"}]\n","location":"line 105, col 1 to line 108, col 58 of module peterson","operatorName":"TypeOK","type":"State"},{"concreteContent":"NextUnchanged == UNCHANGED vars","location":"line 111, col 1 to line 111, col 31 of module peterson","operatorName":"NextUnchanged","type":"State"}]}}